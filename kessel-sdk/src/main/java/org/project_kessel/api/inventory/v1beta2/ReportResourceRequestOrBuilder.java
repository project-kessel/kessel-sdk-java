// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kessel/inventory/v1beta2/report_resource_request.proto
// Protobuf Java Version: 4.32.0

package org.project_kessel.api.inventory.v1beta2;

@com.google.protobuf.Generated
public interface ReportResourceRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kessel.inventory.v1beta2.ReportResourceRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The Kessel Inventory-assigned ID of the *Resource*.
   *
   * Usually not required during reporting; populated internally during correlation.
   * </pre>
   *
   * <code>optional string inventory_id = 1 [json_name = "inventoryId"];</code>
   * @return Whether the inventoryId field is set.
   */
  boolean hasInventoryId();
  /**
   * <pre>
   * The Kessel Inventory-assigned ID of the *Resource*.
   *
   * Usually not required during reporting; populated internally during correlation.
   * </pre>
   *
   * <code>optional string inventory_id = 1 [json_name = "inventoryId"];</code>
   * @return The inventoryId.
   */
  java.lang.String getInventoryId();
  /**
   * <pre>
   * The Kessel Inventory-assigned ID of the *Resource*.
   *
   * Usually not required during reporting; populated internally during correlation.
   * </pre>
   *
   * <code>optional string inventory_id = 1 [json_name = "inventoryId"];</code>
   * @return The bytes for inventoryId.
   */
  com.google.protobuf.ByteString
      getInventoryIdBytes();

  /**
   * <pre>
   * The canonical type of the *Resource* (e.g., "k8s_cluster", "host", "integration").
   *
   * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
   * Must be consistent across all *Reporter Representations* of a given Type reported by a given *Reporter*.
   * Used to:
   * - Select the appropriate schema to validate the *Reporter Representation*
   * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
   * </pre>
   *
   * <code>string type = 2 [json_name = "type", (.buf.validate.field) = { ... }</code>
   * @return The type.
   */
  java.lang.String getType();
  /**
   * <pre>
   * The canonical type of the *Resource* (e.g., "k8s_cluster", "host", "integration").
   *
   * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
   * Must be consistent across all *Reporter Representations* of a given Type reported by a given *Reporter*.
   * Used to:
   * - Select the appropriate schema to validate the *Reporter Representation*
   * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
   * </pre>
   *
   * <code>string type = 2 [json_name = "type", (.buf.validate.field) = { ... }</code>
   * @return The bytes for type.
   */
  com.google.protobuf.ByteString
      getTypeBytes();

  /**
   * <pre>
   * The type of the *Reporter* (e.g., "hbi", "acm", "acs", "notifications").
   *
   * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
   * Must be consistent across all *Reporter Representations* reported by a given *Reporter*.
   * Used to:
   * - Select the appropriate schema to validate the *Reporter Representation*
   * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
   * </pre>
   *
   * <code>string reporter_type = 3 [json_name = "reporterType", (.buf.validate.field) = { ... }</code>
   * @return The reporterType.
   */
  java.lang.String getReporterType();
  /**
   * <pre>
   * The type of the *Reporter* (e.g., "hbi", "acm", "acs", "notifications").
   *
   * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
   * Must be consistent across all *Reporter Representations* reported by a given *Reporter*.
   * Used to:
   * - Select the appropriate schema to validate the *Reporter Representation*
   * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
   * </pre>
   *
   * <code>string reporter_type = 3 [json_name = "reporterType", (.buf.validate.field) = { ... }</code>
   * @return The bytes for reporterType.
   */
  com.google.protobuf.ByteString
      getReporterTypeBytes();

  /**
   * <pre>
   * Identifier for the specific instance of the *Reporter*.
   * This may not be applicable to all Reporters
   *
   * Used to distinguish between multiple instances of the same `reporter_type`.
   * Does not require prior coordination with Kessel Inventory.
   * </pre>
   *
   * <code>string reporter_instance_id = 4 [json_name = "reporterInstanceId", (.buf.validate.field) = { ... }</code>
   * @return The reporterInstanceId.
   */
  java.lang.String getReporterInstanceId();
  /**
   * <pre>
   * Identifier for the specific instance of the *Reporter*.
   * This may not be applicable to all Reporters
   *
   * Used to distinguish between multiple instances of the same `reporter_type`.
   * Does not require prior coordination with Kessel Inventory.
   * </pre>
   *
   * <code>string reporter_instance_id = 4 [json_name = "reporterInstanceId", (.buf.validate.field) = { ... }</code>
   * @return The bytes for reporterInstanceId.
   */
  com.google.protobuf.ByteString
      getReporterInstanceIdBytes();

  /**
   * <code>.kessel.inventory.v1beta2.ResourceRepresentations representations = 5 [json_name = "representations", (.buf.validate.field) = { ... }</code>
   * @return Whether the representations field is set.
   */
  boolean hasRepresentations();
  /**
   * <code>.kessel.inventory.v1beta2.ResourceRepresentations representations = 5 [json_name = "representations", (.buf.validate.field) = { ... }</code>
   * @return The representations.
   */
  org.project_kessel.api.inventory.v1beta2.ResourceRepresentations getRepresentations();
  /**
   * <code>.kessel.inventory.v1beta2.ResourceRepresentations representations = 5 [json_name = "representations", (.buf.validate.field) = { ... }</code>
   */
  org.project_kessel.api.inventory.v1beta2.ResourceRepresentationsOrBuilder getRepresentationsOrBuilder();

  /**
   * <pre>
   * Controls the visibility guarantees of the write operation in Kessel Inventory.
   *
   * - `MINIMIZE_LATENCY` (default): Optimizes for throughput; may delay visibility in `Check` results.
   * - `IMMEDIATE`: Ensures read-your-writes consistency; higher latency due to synchronization.
   *
   * Use `IMMEDIATE` only if your use case requires strong consistency guarantees
   * (e.g., writing and immediately checking access to the resource).
   * </pre>
   *
   * <code>.kessel.inventory.v1beta2.WriteVisibility write_visibility = 6 [json_name = "writeVisibility", (.buf.validate.field) = { ... }</code>
   * @return The enum numeric value on the wire for writeVisibility.
   */
  int getWriteVisibilityValue();
  /**
   * <pre>
   * Controls the visibility guarantees of the write operation in Kessel Inventory.
   *
   * - `MINIMIZE_LATENCY` (default): Optimizes for throughput; may delay visibility in `Check` results.
   * - `IMMEDIATE`: Ensures read-your-writes consistency; higher latency due to synchronization.
   *
   * Use `IMMEDIATE` only if your use case requires strong consistency guarantees
   * (e.g., writing and immediately checking access to the resource).
   * </pre>
   *
   * <code>.kessel.inventory.v1beta2.WriteVisibility write_visibility = 6 [json_name = "writeVisibility", (.buf.validate.field) = { ... }</code>
   * @return The writeVisibility.
   */
  org.project_kessel.api.inventory.v1beta2.WriteVisibility getWriteVisibility();
}
