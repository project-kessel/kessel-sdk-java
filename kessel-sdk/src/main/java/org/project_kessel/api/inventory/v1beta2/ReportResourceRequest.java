// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kessel/inventory/v1beta2/report_resource_request.proto
// Protobuf Java Version: 4.32.0

package org.project_kessel.api.inventory.v1beta2;

/**
 * <pre>
 * Request to register or update a *Reporter*'s *Representation* of a *Resource* in Kessel Inventory.
 * </pre>
 *
 * Protobuf type {@code kessel.inventory.v1beta2.ReportResourceRequest}
 */
@com.google.protobuf.Generated
public final class ReportResourceRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:kessel.inventory.v1beta2.ReportResourceRequest)
    ReportResourceRequestOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 32,
      /* patch= */ 0,
      /* suffix= */ "",
      ReportResourceRequest.class.getName());
  }
  // Use ReportResourceRequest.newBuilder() to construct.
  private ReportResourceRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ReportResourceRequest() {
    inventoryId_ = "";
    type_ = "";
    reporterType_ = "";
    reporterInstanceId_ = "";
    writeVisibility_ = 0;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.project_kessel.api.inventory.v1beta2.ReportResourceRequestOuterClass.internal_static_kessel_inventory_v1beta2_ReportResourceRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.project_kessel.api.inventory.v1beta2.ReportResourceRequestOuterClass.internal_static_kessel_inventory_v1beta2_ReportResourceRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.project_kessel.api.inventory.v1beta2.ReportResourceRequest.class, org.project_kessel.api.inventory.v1beta2.ReportResourceRequest.Builder.class);
  }

  private int bitField0_;
  public static final int INVENTORY_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object inventoryId_ = "";
  /**
   * <pre>
   * The Kessel Inventory-assigned ID of the *Resource*.
   *
   * Usually not required during reporting; populated internally during correlation.
   * </pre>
   *
   * <code>optional string inventory_id = 1 [json_name = "inventoryId"];</code>
   * @return Whether the inventoryId field is set.
   */
  @java.lang.Override
  public boolean hasInventoryId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The Kessel Inventory-assigned ID of the *Resource*.
   *
   * Usually not required during reporting; populated internally during correlation.
   * </pre>
   *
   * <code>optional string inventory_id = 1 [json_name = "inventoryId"];</code>
   * @return The inventoryId.
   */
  @java.lang.Override
  public java.lang.String getInventoryId() {
    java.lang.Object ref = inventoryId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      inventoryId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The Kessel Inventory-assigned ID of the *Resource*.
   *
   * Usually not required during reporting; populated internally during correlation.
   * </pre>
   *
   * <code>optional string inventory_id = 1 [json_name = "inventoryId"];</code>
   * @return The bytes for inventoryId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getInventoryIdBytes() {
    java.lang.Object ref = inventoryId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      inventoryId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object type_ = "";
  /**
   * <pre>
   * The canonical type of the *Resource* (e.g., "k8s_cluster", "host", "integration").
   *
   * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
   * Must be consistent across all *Reporter Representations* of a given Type reported by a given *Reporter*.
   * Used to:
   * - Select the appropriate schema to validate the *Reporter Representation*
   * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
   * </pre>
   *
   * <code>string type = 2 [json_name = "type", (.buf.validate.field) = { ... }</code>
   * @return The type.
   */
  @java.lang.Override
  public java.lang.String getType() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      type_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The canonical type of the *Resource* (e.g., "k8s_cluster", "host", "integration").
   *
   * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
   * Must be consistent across all *Reporter Representations* of a given Type reported by a given *Reporter*.
   * Used to:
   * - Select the appropriate schema to validate the *Reporter Representation*
   * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
   * </pre>
   *
   * <code>string type = 2 [json_name = "type", (.buf.validate.field) = { ... }</code>
   * @return The bytes for type.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTypeBytes() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      type_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REPORTER_TYPE_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object reporterType_ = "";
  /**
   * <pre>
   * The type of the *Reporter* (e.g., "hbi", "acm", "acs", "notifications").
   *
   * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
   * Must be consistent across all *Reporter Representations* reported by a given *Reporter*.
   * Used to:
   * - Select the appropriate schema to validate the *Reporter Representation*
   * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
   * </pre>
   *
   * <code>string reporter_type = 3 [json_name = "reporterType", (.buf.validate.field) = { ... }</code>
   * @return The reporterType.
   */
  @java.lang.Override
  public java.lang.String getReporterType() {
    java.lang.Object ref = reporterType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      reporterType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The type of the *Reporter* (e.g., "hbi", "acm", "acs", "notifications").
   *
   * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
   * Must be consistent across all *Reporter Representations* reported by a given *Reporter*.
   * Used to:
   * - Select the appropriate schema to validate the *Reporter Representation*
   * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
   * </pre>
   *
   * <code>string reporter_type = 3 [json_name = "reporterType", (.buf.validate.field) = { ... }</code>
   * @return The bytes for reporterType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getReporterTypeBytes() {
    java.lang.Object ref = reporterType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      reporterType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REPORTER_INSTANCE_ID_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object reporterInstanceId_ = "";
  /**
   * <pre>
   * Identifier for the specific instance of the *Reporter*.
   * This may not be applicable to all Reporters
   *
   * Used to distinguish between multiple instances of the same `reporter_type`.
   * Does not require prior coordination with Kessel Inventory.
   * </pre>
   *
   * <code>string reporter_instance_id = 4 [json_name = "reporterInstanceId", (.buf.validate.field) = { ... }</code>
   * @return The reporterInstanceId.
   */
  @java.lang.Override
  public java.lang.String getReporterInstanceId() {
    java.lang.Object ref = reporterInstanceId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      reporterInstanceId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Identifier for the specific instance of the *Reporter*.
   * This may not be applicable to all Reporters
   *
   * Used to distinguish between multiple instances of the same `reporter_type`.
   * Does not require prior coordination with Kessel Inventory.
   * </pre>
   *
   * <code>string reporter_instance_id = 4 [json_name = "reporterInstanceId", (.buf.validate.field) = { ... }</code>
   * @return The bytes for reporterInstanceId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getReporterInstanceIdBytes() {
    java.lang.Object ref = reporterInstanceId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      reporterInstanceId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REPRESENTATIONS_FIELD_NUMBER = 5;
  private org.project_kessel.api.inventory.v1beta2.ResourceRepresentations representations_;
  /**
   * <code>.kessel.inventory.v1beta2.ResourceRepresentations representations = 5 [json_name = "representations", (.buf.validate.field) = { ... }</code>
   * @return Whether the representations field is set.
   */
  @java.lang.Override
  public boolean hasRepresentations() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>.kessel.inventory.v1beta2.ResourceRepresentations representations = 5 [json_name = "representations", (.buf.validate.field) = { ... }</code>
   * @return The representations.
   */
  @java.lang.Override
  public org.project_kessel.api.inventory.v1beta2.ResourceRepresentations getRepresentations() {
    return representations_ == null ? org.project_kessel.api.inventory.v1beta2.ResourceRepresentations.getDefaultInstance() : representations_;
  }
  /**
   * <code>.kessel.inventory.v1beta2.ResourceRepresentations representations = 5 [json_name = "representations", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public org.project_kessel.api.inventory.v1beta2.ResourceRepresentationsOrBuilder getRepresentationsOrBuilder() {
    return representations_ == null ? org.project_kessel.api.inventory.v1beta2.ResourceRepresentations.getDefaultInstance() : representations_;
  }

  public static final int WRITE_VISIBILITY_FIELD_NUMBER = 6;
  private int writeVisibility_ = 0;
  /**
   * <pre>
   * Controls the visibility guarantees of the write operation in Kessel Inventory.
   *
   * - `MINIMIZE_LATENCY` (default): Optimizes for throughput; may delay visibility in `Check` results.
   * - `IMMEDIATE`: Ensures read-your-writes consistency; higher latency due to synchronization.
   *
   * Use `IMMEDIATE` only if your use case requires strong consistency guarantees
   * (e.g., writing and immediately checking access to the resource).
   * </pre>
   *
   * <code>.kessel.inventory.v1beta2.WriteVisibility write_visibility = 6 [json_name = "writeVisibility", (.buf.validate.field) = { ... }</code>
   * @return The enum numeric value on the wire for writeVisibility.
   */
  @java.lang.Override public int getWriteVisibilityValue() {
    return writeVisibility_;
  }
  /**
   * <pre>
   * Controls the visibility guarantees of the write operation in Kessel Inventory.
   *
   * - `MINIMIZE_LATENCY` (default): Optimizes for throughput; may delay visibility in `Check` results.
   * - `IMMEDIATE`: Ensures read-your-writes consistency; higher latency due to synchronization.
   *
   * Use `IMMEDIATE` only if your use case requires strong consistency guarantees
   * (e.g., writing and immediately checking access to the resource).
   * </pre>
   *
   * <code>.kessel.inventory.v1beta2.WriteVisibility write_visibility = 6 [json_name = "writeVisibility", (.buf.validate.field) = { ... }</code>
   * @return The writeVisibility.
   */
  @java.lang.Override public org.project_kessel.api.inventory.v1beta2.WriteVisibility getWriteVisibility() {
    org.project_kessel.api.inventory.v1beta2.WriteVisibility result = org.project_kessel.api.inventory.v1beta2.WriteVisibility.forNumber(writeVisibility_);
    return result == null ? org.project_kessel.api.inventory.v1beta2.WriteVisibility.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, inventoryId_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(type_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, type_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(reporterType_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, reporterType_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(reporterInstanceId_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, reporterInstanceId_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(5, getRepresentations());
    }
    if (writeVisibility_ != org.project_kessel.api.inventory.v1beta2.WriteVisibility.WRITE_VISIBILITY_UNSPECIFIED.getNumber()) {
      output.writeEnum(6, writeVisibility_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, inventoryId_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(type_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, type_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(reporterType_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, reporterType_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(reporterInstanceId_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, reporterInstanceId_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getRepresentations());
    }
    if (writeVisibility_ != org.project_kessel.api.inventory.v1beta2.WriteVisibility.WRITE_VISIBILITY_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(6, writeVisibility_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.project_kessel.api.inventory.v1beta2.ReportResourceRequest)) {
      return super.equals(obj);
    }
    org.project_kessel.api.inventory.v1beta2.ReportResourceRequest other = (org.project_kessel.api.inventory.v1beta2.ReportResourceRequest) obj;

    if (hasInventoryId() != other.hasInventoryId()) return false;
    if (hasInventoryId()) {
      if (!getInventoryId()
          .equals(other.getInventoryId())) return false;
    }
    if (!getType()
        .equals(other.getType())) return false;
    if (!getReporterType()
        .equals(other.getReporterType())) return false;
    if (!getReporterInstanceId()
        .equals(other.getReporterInstanceId())) return false;
    if (hasRepresentations() != other.hasRepresentations()) return false;
    if (hasRepresentations()) {
      if (!getRepresentations()
          .equals(other.getRepresentations())) return false;
    }
    if (writeVisibility_ != other.writeVisibility_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasInventoryId()) {
      hash = (37 * hash) + INVENTORY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getInventoryId().hashCode();
    }
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getType().hashCode();
    hash = (37 * hash) + REPORTER_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getReporterType().hashCode();
    hash = (37 * hash) + REPORTER_INSTANCE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getReporterInstanceId().hashCode();
    if (hasRepresentations()) {
      hash = (37 * hash) + REPRESENTATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getRepresentations().hashCode();
    }
    hash = (37 * hash) + WRITE_VISIBILITY_FIELD_NUMBER;
    hash = (53 * hash) + writeVisibility_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.project_kessel.api.inventory.v1beta2.ReportResourceRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.project_kessel.api.inventory.v1beta2.ReportResourceRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.project_kessel.api.inventory.v1beta2.ReportResourceRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.project_kessel.api.inventory.v1beta2.ReportResourceRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.project_kessel.api.inventory.v1beta2.ReportResourceRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.project_kessel.api.inventory.v1beta2.ReportResourceRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.project_kessel.api.inventory.v1beta2.ReportResourceRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.project_kessel.api.inventory.v1beta2.ReportResourceRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.project_kessel.api.inventory.v1beta2.ReportResourceRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.project_kessel.api.inventory.v1beta2.ReportResourceRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.project_kessel.api.inventory.v1beta2.ReportResourceRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.project_kessel.api.inventory.v1beta2.ReportResourceRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.project_kessel.api.inventory.v1beta2.ReportResourceRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Request to register or update a *Reporter*'s *Representation* of a *Resource* in Kessel Inventory.
   * </pre>
   *
   * Protobuf type {@code kessel.inventory.v1beta2.ReportResourceRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:kessel.inventory.v1beta2.ReportResourceRequest)
      org.project_kessel.api.inventory.v1beta2.ReportResourceRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.project_kessel.api.inventory.v1beta2.ReportResourceRequestOuterClass.internal_static_kessel_inventory_v1beta2_ReportResourceRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.project_kessel.api.inventory.v1beta2.ReportResourceRequestOuterClass.internal_static_kessel_inventory_v1beta2_ReportResourceRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.project_kessel.api.inventory.v1beta2.ReportResourceRequest.class, org.project_kessel.api.inventory.v1beta2.ReportResourceRequest.Builder.class);
    }

    // Construct using org.project_kessel.api.inventory.v1beta2.ReportResourceRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        internalGetRepresentationsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      inventoryId_ = "";
      type_ = "";
      reporterType_ = "";
      reporterInstanceId_ = "";
      representations_ = null;
      if (representationsBuilder_ != null) {
        representationsBuilder_.dispose();
        representationsBuilder_ = null;
      }
      writeVisibility_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.project_kessel.api.inventory.v1beta2.ReportResourceRequestOuterClass.internal_static_kessel_inventory_v1beta2_ReportResourceRequest_descriptor;
    }

    @java.lang.Override
    public org.project_kessel.api.inventory.v1beta2.ReportResourceRequest getDefaultInstanceForType() {
      return org.project_kessel.api.inventory.v1beta2.ReportResourceRequest.getDefaultInstance();
    }

    @java.lang.Override
    public org.project_kessel.api.inventory.v1beta2.ReportResourceRequest build() {
      org.project_kessel.api.inventory.v1beta2.ReportResourceRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.project_kessel.api.inventory.v1beta2.ReportResourceRequest buildPartial() {
      org.project_kessel.api.inventory.v1beta2.ReportResourceRequest result = new org.project_kessel.api.inventory.v1beta2.ReportResourceRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(org.project_kessel.api.inventory.v1beta2.ReportResourceRequest result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.inventoryId_ = inventoryId_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.type_ = type_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.reporterType_ = reporterType_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.reporterInstanceId_ = reporterInstanceId_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.representations_ = representationsBuilder_ == null
            ? representations_
            : representationsBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.writeVisibility_ = writeVisibility_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.project_kessel.api.inventory.v1beta2.ReportResourceRequest) {
        return mergeFrom((org.project_kessel.api.inventory.v1beta2.ReportResourceRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.project_kessel.api.inventory.v1beta2.ReportResourceRequest other) {
      if (other == org.project_kessel.api.inventory.v1beta2.ReportResourceRequest.getDefaultInstance()) return this;
      if (other.hasInventoryId()) {
        inventoryId_ = other.inventoryId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getType().isEmpty()) {
        type_ = other.type_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getReporterType().isEmpty()) {
        reporterType_ = other.reporterType_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getReporterInstanceId().isEmpty()) {
        reporterInstanceId_ = other.reporterInstanceId_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.hasRepresentations()) {
        mergeRepresentations(other.getRepresentations());
      }
      if (other.writeVisibility_ != 0) {
        setWriteVisibilityValue(other.getWriteVisibilityValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              inventoryId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              type_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              reporterType_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              reporterInstanceId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  internalGetRepresentationsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 48: {
              writeVisibility_ = input.readEnum();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object inventoryId_ = "";
    /**
     * <pre>
     * The Kessel Inventory-assigned ID of the *Resource*.
     *
     * Usually not required during reporting; populated internally during correlation.
     * </pre>
     *
     * <code>optional string inventory_id = 1 [json_name = "inventoryId"];</code>
     * @return Whether the inventoryId field is set.
     */
    public boolean hasInventoryId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The Kessel Inventory-assigned ID of the *Resource*.
     *
     * Usually not required during reporting; populated internally during correlation.
     * </pre>
     *
     * <code>optional string inventory_id = 1 [json_name = "inventoryId"];</code>
     * @return The inventoryId.
     */
    public java.lang.String getInventoryId() {
      java.lang.Object ref = inventoryId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        inventoryId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The Kessel Inventory-assigned ID of the *Resource*.
     *
     * Usually not required during reporting; populated internally during correlation.
     * </pre>
     *
     * <code>optional string inventory_id = 1 [json_name = "inventoryId"];</code>
     * @return The bytes for inventoryId.
     */
    public com.google.protobuf.ByteString
        getInventoryIdBytes() {
      java.lang.Object ref = inventoryId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        inventoryId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The Kessel Inventory-assigned ID of the *Resource*.
     *
     * Usually not required during reporting; populated internally during correlation.
     * </pre>
     *
     * <code>optional string inventory_id = 1 [json_name = "inventoryId"];</code>
     * @param value The inventoryId to set.
     * @return This builder for chaining.
     */
    public Builder setInventoryId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      inventoryId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Kessel Inventory-assigned ID of the *Resource*.
     *
     * Usually not required during reporting; populated internally during correlation.
     * </pre>
     *
     * <code>optional string inventory_id = 1 [json_name = "inventoryId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearInventoryId() {
      inventoryId_ = getDefaultInstance().getInventoryId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Kessel Inventory-assigned ID of the *Resource*.
     *
     * Usually not required during reporting; populated internally during correlation.
     * </pre>
     *
     * <code>optional string inventory_id = 1 [json_name = "inventoryId"];</code>
     * @param value The bytes for inventoryId to set.
     * @return This builder for chaining.
     */
    public Builder setInventoryIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      inventoryId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object type_ = "";
    /**
     * <pre>
     * The canonical type of the *Resource* (e.g., "k8s_cluster", "host", "integration").
     *
     * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
     * Must be consistent across all *Reporter Representations* of a given Type reported by a given *Reporter*.
     * Used to:
     * - Select the appropriate schema to validate the *Reporter Representation*
     * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
     * </pre>
     *
     * <code>string type = 2 [json_name = "type", (.buf.validate.field) = { ... }</code>
     * @return The type.
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The canonical type of the *Resource* (e.g., "k8s_cluster", "host", "integration").
     *
     * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
     * Must be consistent across all *Reporter Representations* of a given Type reported by a given *Reporter*.
     * Used to:
     * - Select the appropriate schema to validate the *Reporter Representation*
     * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
     * </pre>
     *
     * <code>string type = 2 [json_name = "type", (.buf.validate.field) = { ... }</code>
     * @return The bytes for type.
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The canonical type of the *Resource* (e.g., "k8s_cluster", "host", "integration").
     *
     * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
     * Must be consistent across all *Reporter Representations* of a given Type reported by a given *Reporter*.
     * Used to:
     * - Select the appropriate schema to validate the *Reporter Representation*
     * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
     * </pre>
     *
     * <code>string type = 2 [json_name = "type", (.buf.validate.field) = { ... }</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      type_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The canonical type of the *Resource* (e.g., "k8s_cluster", "host", "integration").
     *
     * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
     * Must be consistent across all *Reporter Representations* of a given Type reported by a given *Reporter*.
     * Used to:
     * - Select the appropriate schema to validate the *Reporter Representation*
     * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
     * </pre>
     *
     * <code>string type = 2 [json_name = "type", (.buf.validate.field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      type_ = getDefaultInstance().getType();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The canonical type of the *Resource* (e.g., "k8s_cluster", "host", "integration").
     *
     * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
     * Must be consistent across all *Reporter Representations* of a given Type reported by a given *Reporter*.
     * Used to:
     * - Select the appropriate schema to validate the *Reporter Representation*
     * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
     * </pre>
     *
     * <code>string type = 2 [json_name = "type", (.buf.validate.field) = { ... }</code>
     * @param value The bytes for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      type_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object reporterType_ = "";
    /**
     * <pre>
     * The type of the *Reporter* (e.g., "hbi", "acm", "acs", "notifications").
     *
     * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
     * Must be consistent across all *Reporter Representations* reported by a given *Reporter*.
     * Used to:
     * - Select the appropriate schema to validate the *Reporter Representation*
     * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
     * </pre>
     *
     * <code>string reporter_type = 3 [json_name = "reporterType", (.buf.validate.field) = { ... }</code>
     * @return The reporterType.
     */
    public java.lang.String getReporterType() {
      java.lang.Object ref = reporterType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        reporterType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The type of the *Reporter* (e.g., "hbi", "acm", "acs", "notifications").
     *
     * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
     * Must be consistent across all *Reporter Representations* reported by a given *Reporter*.
     * Used to:
     * - Select the appropriate schema to validate the *Reporter Representation*
     * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
     * </pre>
     *
     * <code>string reporter_type = 3 [json_name = "reporterType", (.buf.validate.field) = { ... }</code>
     * @return The bytes for reporterType.
     */
    public com.google.protobuf.ByteString
        getReporterTypeBytes() {
      java.lang.Object ref = reporterType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reporterType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The type of the *Reporter* (e.g., "hbi", "acm", "acs", "notifications").
     *
     * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
     * Must be consistent across all *Reporter Representations* reported by a given *Reporter*.
     * Used to:
     * - Select the appropriate schema to validate the *Reporter Representation*
     * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
     * </pre>
     *
     * <code>string reporter_type = 3 [json_name = "reporterType", (.buf.validate.field) = { ... }</code>
     * @param value The reporterType to set.
     * @return This builder for chaining.
     */
    public Builder setReporterType(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      reporterType_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of the *Reporter* (e.g., "hbi", "acm", "acs", "notifications").
     *
     * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
     * Must be consistent across all *Reporter Representations* reported by a given *Reporter*.
     * Used to:
     * - Select the appropriate schema to validate the *Reporter Representation*
     * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
     * </pre>
     *
     * <code>string reporter_type = 3 [json_name = "reporterType", (.buf.validate.field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearReporterType() {
      reporterType_ = getDefaultInstance().getReporterType();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of the *Reporter* (e.g., "hbi", "acm", "acs", "notifications").
     *
     * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
     * Must be consistent across all *Reporter Representations* reported by a given *Reporter*.
     * Used to:
     * - Select the appropriate schema to validate the *Reporter Representation*
     * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
     * </pre>
     *
     * <code>string reporter_type = 3 [json_name = "reporterType", (.buf.validate.field) = { ... }</code>
     * @param value The bytes for reporterType to set.
     * @return This builder for chaining.
     */
    public Builder setReporterTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      reporterType_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object reporterInstanceId_ = "";
    /**
     * <pre>
     * Identifier for the specific instance of the *Reporter*.
     * This may not be applicable to all Reporters
     *
     * Used to distinguish between multiple instances of the same `reporter_type`.
     * Does not require prior coordination with Kessel Inventory.
     * </pre>
     *
     * <code>string reporter_instance_id = 4 [json_name = "reporterInstanceId", (.buf.validate.field) = { ... }</code>
     * @return The reporterInstanceId.
     */
    public java.lang.String getReporterInstanceId() {
      java.lang.Object ref = reporterInstanceId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        reporterInstanceId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Identifier for the specific instance of the *Reporter*.
     * This may not be applicable to all Reporters
     *
     * Used to distinguish between multiple instances of the same `reporter_type`.
     * Does not require prior coordination with Kessel Inventory.
     * </pre>
     *
     * <code>string reporter_instance_id = 4 [json_name = "reporterInstanceId", (.buf.validate.field) = { ... }</code>
     * @return The bytes for reporterInstanceId.
     */
    public com.google.protobuf.ByteString
        getReporterInstanceIdBytes() {
      java.lang.Object ref = reporterInstanceId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reporterInstanceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Identifier for the specific instance of the *Reporter*.
     * This may not be applicable to all Reporters
     *
     * Used to distinguish between multiple instances of the same `reporter_type`.
     * Does not require prior coordination with Kessel Inventory.
     * </pre>
     *
     * <code>string reporter_instance_id = 4 [json_name = "reporterInstanceId", (.buf.validate.field) = { ... }</code>
     * @param value The reporterInstanceId to set.
     * @return This builder for chaining.
     */
    public Builder setReporterInstanceId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      reporterInstanceId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Identifier for the specific instance of the *Reporter*.
     * This may not be applicable to all Reporters
     *
     * Used to distinguish between multiple instances of the same `reporter_type`.
     * Does not require prior coordination with Kessel Inventory.
     * </pre>
     *
     * <code>string reporter_instance_id = 4 [json_name = "reporterInstanceId", (.buf.validate.field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearReporterInstanceId() {
      reporterInstanceId_ = getDefaultInstance().getReporterInstanceId();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Identifier for the specific instance of the *Reporter*.
     * This may not be applicable to all Reporters
     *
     * Used to distinguish between multiple instances of the same `reporter_type`.
     * Does not require prior coordination with Kessel Inventory.
     * </pre>
     *
     * <code>string reporter_instance_id = 4 [json_name = "reporterInstanceId", (.buf.validate.field) = { ... }</code>
     * @param value The bytes for reporterInstanceId to set.
     * @return This builder for chaining.
     */
    public Builder setReporterInstanceIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      reporterInstanceId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private org.project_kessel.api.inventory.v1beta2.ResourceRepresentations representations_;
    private com.google.protobuf.SingleFieldBuilder<
        org.project_kessel.api.inventory.v1beta2.ResourceRepresentations, org.project_kessel.api.inventory.v1beta2.ResourceRepresentations.Builder, org.project_kessel.api.inventory.v1beta2.ResourceRepresentationsOrBuilder> representationsBuilder_;
    /**
     * <code>.kessel.inventory.v1beta2.ResourceRepresentations representations = 5 [json_name = "representations", (.buf.validate.field) = { ... }</code>
     * @return Whether the representations field is set.
     */
    public boolean hasRepresentations() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>.kessel.inventory.v1beta2.ResourceRepresentations representations = 5 [json_name = "representations", (.buf.validate.field) = { ... }</code>
     * @return The representations.
     */
    public org.project_kessel.api.inventory.v1beta2.ResourceRepresentations getRepresentations() {
      if (representationsBuilder_ == null) {
        return representations_ == null ? org.project_kessel.api.inventory.v1beta2.ResourceRepresentations.getDefaultInstance() : representations_;
      } else {
        return representationsBuilder_.getMessage();
      }
    }
    /**
     * <code>.kessel.inventory.v1beta2.ResourceRepresentations representations = 5 [json_name = "representations", (.buf.validate.field) = { ... }</code>
     */
    public Builder setRepresentations(org.project_kessel.api.inventory.v1beta2.ResourceRepresentations value) {
      if (representationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        representations_ = value;
      } else {
        representationsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>.kessel.inventory.v1beta2.ResourceRepresentations representations = 5 [json_name = "representations", (.buf.validate.field) = { ... }</code>
     */
    public Builder setRepresentations(
        org.project_kessel.api.inventory.v1beta2.ResourceRepresentations.Builder builderForValue) {
      if (representationsBuilder_ == null) {
        representations_ = builderForValue.build();
      } else {
        representationsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>.kessel.inventory.v1beta2.ResourceRepresentations representations = 5 [json_name = "representations", (.buf.validate.field) = { ... }</code>
     */
    public Builder mergeRepresentations(org.project_kessel.api.inventory.v1beta2.ResourceRepresentations value) {
      if (representationsBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          representations_ != null &&
          representations_ != org.project_kessel.api.inventory.v1beta2.ResourceRepresentations.getDefaultInstance()) {
          getRepresentationsBuilder().mergeFrom(value);
        } else {
          representations_ = value;
        }
      } else {
        representationsBuilder_.mergeFrom(value);
      }
      if (representations_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.kessel.inventory.v1beta2.ResourceRepresentations representations = 5 [json_name = "representations", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearRepresentations() {
      bitField0_ = (bitField0_ & ~0x00000010);
      representations_ = null;
      if (representationsBuilder_ != null) {
        representationsBuilder_.dispose();
        representationsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.kessel.inventory.v1beta2.ResourceRepresentations representations = 5 [json_name = "representations", (.buf.validate.field) = { ... }</code>
     */
    public org.project_kessel.api.inventory.v1beta2.ResourceRepresentations.Builder getRepresentationsBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return internalGetRepresentationsFieldBuilder().getBuilder();
    }
    /**
     * <code>.kessel.inventory.v1beta2.ResourceRepresentations representations = 5 [json_name = "representations", (.buf.validate.field) = { ... }</code>
     */
    public org.project_kessel.api.inventory.v1beta2.ResourceRepresentationsOrBuilder getRepresentationsOrBuilder() {
      if (representationsBuilder_ != null) {
        return representationsBuilder_.getMessageOrBuilder();
      } else {
        return representations_ == null ?
            org.project_kessel.api.inventory.v1beta2.ResourceRepresentations.getDefaultInstance() : representations_;
      }
    }
    /**
     * <code>.kessel.inventory.v1beta2.ResourceRepresentations representations = 5 [json_name = "representations", (.buf.validate.field) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        org.project_kessel.api.inventory.v1beta2.ResourceRepresentations, org.project_kessel.api.inventory.v1beta2.ResourceRepresentations.Builder, org.project_kessel.api.inventory.v1beta2.ResourceRepresentationsOrBuilder> 
        internalGetRepresentationsFieldBuilder() {
      if (representationsBuilder_ == null) {
        representationsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            org.project_kessel.api.inventory.v1beta2.ResourceRepresentations, org.project_kessel.api.inventory.v1beta2.ResourceRepresentations.Builder, org.project_kessel.api.inventory.v1beta2.ResourceRepresentationsOrBuilder>(
                getRepresentations(),
                getParentForChildren(),
                isClean());
        representations_ = null;
      }
      return representationsBuilder_;
    }

    private int writeVisibility_ = 0;
    /**
     * <pre>
     * Controls the visibility guarantees of the write operation in Kessel Inventory.
     *
     * - `MINIMIZE_LATENCY` (default): Optimizes for throughput; may delay visibility in `Check` results.
     * - `IMMEDIATE`: Ensures read-your-writes consistency; higher latency due to synchronization.
     *
     * Use `IMMEDIATE` only if your use case requires strong consistency guarantees
     * (e.g., writing and immediately checking access to the resource).
     * </pre>
     *
     * <code>.kessel.inventory.v1beta2.WriteVisibility write_visibility = 6 [json_name = "writeVisibility", (.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for writeVisibility.
     */
    @java.lang.Override public int getWriteVisibilityValue() {
      return writeVisibility_;
    }
    /**
     * <pre>
     * Controls the visibility guarantees of the write operation in Kessel Inventory.
     *
     * - `MINIMIZE_LATENCY` (default): Optimizes for throughput; may delay visibility in `Check` results.
     * - `IMMEDIATE`: Ensures read-your-writes consistency; higher latency due to synchronization.
     *
     * Use `IMMEDIATE` only if your use case requires strong consistency guarantees
     * (e.g., writing and immediately checking access to the resource).
     * </pre>
     *
     * <code>.kessel.inventory.v1beta2.WriteVisibility write_visibility = 6 [json_name = "writeVisibility", (.buf.validate.field) = { ... }</code>
     * @param value The enum numeric value on the wire for writeVisibility to set.
     * @return This builder for chaining.
     */
    public Builder setWriteVisibilityValue(int value) {
      writeVisibility_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Controls the visibility guarantees of the write operation in Kessel Inventory.
     *
     * - `MINIMIZE_LATENCY` (default): Optimizes for throughput; may delay visibility in `Check` results.
     * - `IMMEDIATE`: Ensures read-your-writes consistency; higher latency due to synchronization.
     *
     * Use `IMMEDIATE` only if your use case requires strong consistency guarantees
     * (e.g., writing and immediately checking access to the resource).
     * </pre>
     *
     * <code>.kessel.inventory.v1beta2.WriteVisibility write_visibility = 6 [json_name = "writeVisibility", (.buf.validate.field) = { ... }</code>
     * @return The writeVisibility.
     */
    @java.lang.Override
    public org.project_kessel.api.inventory.v1beta2.WriteVisibility getWriteVisibility() {
      org.project_kessel.api.inventory.v1beta2.WriteVisibility result = org.project_kessel.api.inventory.v1beta2.WriteVisibility.forNumber(writeVisibility_);
      return result == null ? org.project_kessel.api.inventory.v1beta2.WriteVisibility.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Controls the visibility guarantees of the write operation in Kessel Inventory.
     *
     * - `MINIMIZE_LATENCY` (default): Optimizes for throughput; may delay visibility in `Check` results.
     * - `IMMEDIATE`: Ensures read-your-writes consistency; higher latency due to synchronization.
     *
     * Use `IMMEDIATE` only if your use case requires strong consistency guarantees
     * (e.g., writing and immediately checking access to the resource).
     * </pre>
     *
     * <code>.kessel.inventory.v1beta2.WriteVisibility write_visibility = 6 [json_name = "writeVisibility", (.buf.validate.field) = { ... }</code>
     * @param value The writeVisibility to set.
     * @return This builder for chaining.
     */
    public Builder setWriteVisibility(org.project_kessel.api.inventory.v1beta2.WriteVisibility value) {
      if (value == null) { throw new NullPointerException(); }
      bitField0_ |= 0x00000020;
      writeVisibility_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Controls the visibility guarantees of the write operation in Kessel Inventory.
     *
     * - `MINIMIZE_LATENCY` (default): Optimizes for throughput; may delay visibility in `Check` results.
     * - `IMMEDIATE`: Ensures read-your-writes consistency; higher latency due to synchronization.
     *
     * Use `IMMEDIATE` only if your use case requires strong consistency guarantees
     * (e.g., writing and immediately checking access to the resource).
     * </pre>
     *
     * <code>.kessel.inventory.v1beta2.WriteVisibility write_visibility = 6 [json_name = "writeVisibility", (.buf.validate.field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearWriteVisibility() {
      bitField0_ = (bitField0_ & ~0x00000020);
      writeVisibility_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:kessel.inventory.v1beta2.ReportResourceRequest)
  }

  // @@protoc_insertion_point(class_scope:kessel.inventory.v1beta2.ReportResourceRequest)
  private static final org.project_kessel.api.inventory.v1beta2.ReportResourceRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.project_kessel.api.inventory.v1beta2.ReportResourceRequest();
  }

  public static org.project_kessel.api.inventory.v1beta2.ReportResourceRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ReportResourceRequest>
      PARSER = new com.google.protobuf.AbstractParser<ReportResourceRequest>() {
    @java.lang.Override
    public ReportResourceRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ReportResourceRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ReportResourceRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.project_kessel.api.inventory.v1beta2.ReportResourceRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

