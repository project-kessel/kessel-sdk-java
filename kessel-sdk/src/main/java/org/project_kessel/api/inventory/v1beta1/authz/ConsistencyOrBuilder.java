// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kessel/inventory/v1beta1/authz/common.proto
// Protobuf Java Version: 4.32.0

package org.project_kessel.api.inventory.v1beta1.authz;

@com.google.protobuf.Generated
public interface ConsistencyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kessel.inventory.v1beta1.authz.Consistency)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The service selects the fastest snapshot available.
   * *Must* be set true if used.
   * </pre>
   *
   * <code>bool minimize_latency = 1 [json_name = "minimizeLatency", (.buf.validate.field) = { ... }</code>
   * @return Whether the minimizeLatency field is set.
   */
  boolean hasMinimizeLatency();
  /**
   * <pre>
   * The service selects the fastest snapshot available.
   * *Must* be set true if used.
   * </pre>
   *
   * <code>bool minimize_latency = 1 [json_name = "minimizeLatency", (.buf.validate.field) = { ... }</code>
   * @return The minimizeLatency.
   */
  boolean getMinimizeLatency();

  /**
   * <pre>
   * All data used in the API call must be *at least as fresh* 
   * as found in the ConsistencyToken. More recent data might be used
   * if available or faster.
   * </pre>
   *
   * <code>.kessel.inventory.v1beta1.authz.ConsistencyToken at_least_as_fresh = 2 [json_name = "atLeastAsFresh"];</code>
   * @return Whether the atLeastAsFresh field is set.
   */
  boolean hasAtLeastAsFresh();
  /**
   * <pre>
   * All data used in the API call must be *at least as fresh* 
   * as found in the ConsistencyToken. More recent data might be used
   * if available or faster.
   * </pre>
   *
   * <code>.kessel.inventory.v1beta1.authz.ConsistencyToken at_least_as_fresh = 2 [json_name = "atLeastAsFresh"];</code>
   * @return The atLeastAsFresh.
   */
  org.project_kessel.api.inventory.v1beta1.authz.ConsistencyToken getAtLeastAsFresh();
  /**
   * <pre>
   * All data used in the API call must be *at least as fresh* 
   * as found in the ConsistencyToken. More recent data might be used
   * if available or faster.
   * </pre>
   *
   * <code>.kessel.inventory.v1beta1.authz.ConsistencyToken at_least_as_fresh = 2 [json_name = "atLeastAsFresh"];</code>
   */
  org.project_kessel.api.inventory.v1beta1.authz.ConsistencyTokenOrBuilder getAtLeastAsFreshOrBuilder();

  org.project_kessel.api.inventory.v1beta1.authz.Consistency.RequirementCase getRequirementCase();
}
