// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: buf/validate/validate.proto
// Protobuf Java Version: 4.32.0

package build.buf.validate;

@com.google.protobuf.Generated
public interface ViolationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:buf.validate.Violation)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * `field` is a machine-readable path to the field that failed validation.
   * This could be a nested field, in which case the path will include all the parent fields leading to the actual field that caused the violation.
   *
   * For example, consider the following message:
   *
   * ```proto
   * message Message {
   * bool a = 1 [(buf.validate.field).required = true];
   * }
   * ```
   *
   * It could produce the following violation:
   *
   * ```textproto
   * violation {
   * field { element { field_number: 1, field_name: "a", field_type: 8 } }
   * ...
   * }
   * ```
   * </pre>
   *
   * <code>optional .buf.validate.FieldPath field = 5 [json_name = "field"];</code>
   * @return Whether the field field is set.
   */
  boolean hasField();
  /**
   * <pre>
   * `field` is a machine-readable path to the field that failed validation.
   * This could be a nested field, in which case the path will include all the parent fields leading to the actual field that caused the violation.
   *
   * For example, consider the following message:
   *
   * ```proto
   * message Message {
   * bool a = 1 [(buf.validate.field).required = true];
   * }
   * ```
   *
   * It could produce the following violation:
   *
   * ```textproto
   * violation {
   * field { element { field_number: 1, field_name: "a", field_type: 8 } }
   * ...
   * }
   * ```
   * </pre>
   *
   * <code>optional .buf.validate.FieldPath field = 5 [json_name = "field"];</code>
   * @return The field.
   */
  build.buf.validate.FieldPath getField();
  /**
   * <pre>
   * `field` is a machine-readable path to the field that failed validation.
   * This could be a nested field, in which case the path will include all the parent fields leading to the actual field that caused the violation.
   *
   * For example, consider the following message:
   *
   * ```proto
   * message Message {
   * bool a = 1 [(buf.validate.field).required = true];
   * }
   * ```
   *
   * It could produce the following violation:
   *
   * ```textproto
   * violation {
   * field { element { field_number: 1, field_name: "a", field_type: 8 } }
   * ...
   * }
   * ```
   * </pre>
   *
   * <code>optional .buf.validate.FieldPath field = 5 [json_name = "field"];</code>
   */
  build.buf.validate.FieldPathOrBuilder getFieldOrBuilder();

  /**
   * <pre>
   * `rule` is a machine-readable path that points to the specific rule that failed validation.
   * This will be a nested field starting from the FieldRules of the field that failed validation.
   * For custom rules, this will provide the path of the rule, e.g. `cel[0]`.
   *
   * For example, consider the following message:
   *
   * ```proto
   * message Message {
   * bool a = 1 [(buf.validate.field).required = true];
   * bool b = 2 [(buf.validate.field).cel = {
   * id: "custom_rule",
   * expression: "!this ? 'b must be true': ''"
   * }]
   * }
   * ```
   *
   * It could produce the following violations:
   *
   * ```textproto
   * violation {
   * rule { element { field_number: 25, field_name: "required", field_type: 8 } }
   * ...
   * }
   * violation {
   * rule { element { field_number: 23, field_name: "cel", field_type: 11, index: 0 } }
   * ...
   * }
   * ```
   * </pre>
   *
   * <code>optional .buf.validate.FieldPath rule = 6 [json_name = "rule"];</code>
   * @return Whether the rule field is set.
   */
  boolean hasRule();
  /**
   * <pre>
   * `rule` is a machine-readable path that points to the specific rule that failed validation.
   * This will be a nested field starting from the FieldRules of the field that failed validation.
   * For custom rules, this will provide the path of the rule, e.g. `cel[0]`.
   *
   * For example, consider the following message:
   *
   * ```proto
   * message Message {
   * bool a = 1 [(buf.validate.field).required = true];
   * bool b = 2 [(buf.validate.field).cel = {
   * id: "custom_rule",
   * expression: "!this ? 'b must be true': ''"
   * }]
   * }
   * ```
   *
   * It could produce the following violations:
   *
   * ```textproto
   * violation {
   * rule { element { field_number: 25, field_name: "required", field_type: 8 } }
   * ...
   * }
   * violation {
   * rule { element { field_number: 23, field_name: "cel", field_type: 11, index: 0 } }
   * ...
   * }
   * ```
   * </pre>
   *
   * <code>optional .buf.validate.FieldPath rule = 6 [json_name = "rule"];</code>
   * @return The rule.
   */
  build.buf.validate.FieldPath getRule();
  /**
   * <pre>
   * `rule` is a machine-readable path that points to the specific rule that failed validation.
   * This will be a nested field starting from the FieldRules of the field that failed validation.
   * For custom rules, this will provide the path of the rule, e.g. `cel[0]`.
   *
   * For example, consider the following message:
   *
   * ```proto
   * message Message {
   * bool a = 1 [(buf.validate.field).required = true];
   * bool b = 2 [(buf.validate.field).cel = {
   * id: "custom_rule",
   * expression: "!this ? 'b must be true': ''"
   * }]
   * }
   * ```
   *
   * It could produce the following violations:
   *
   * ```textproto
   * violation {
   * rule { element { field_number: 25, field_name: "required", field_type: 8 } }
   * ...
   * }
   * violation {
   * rule { element { field_number: 23, field_name: "cel", field_type: 11, index: 0 } }
   * ...
   * }
   * ```
   * </pre>
   *
   * <code>optional .buf.validate.FieldPath rule = 6 [json_name = "rule"];</code>
   */
  build.buf.validate.FieldPathOrBuilder getRuleOrBuilder();

  /**
   * <pre>
   * `rule_id` is the unique identifier of the `Rule` that was not fulfilled.
   * This is the same `id` that was specified in the `Rule` message, allowing easy tracing of which rule was violated.
   * </pre>
   *
   * <code>optional string rule_id = 2 [json_name = "ruleId"];</code>
   * @return Whether the ruleId field is set.
   */
  boolean hasRuleId();
  /**
   * <pre>
   * `rule_id` is the unique identifier of the `Rule` that was not fulfilled.
   * This is the same `id` that was specified in the `Rule` message, allowing easy tracing of which rule was violated.
   * </pre>
   *
   * <code>optional string rule_id = 2 [json_name = "ruleId"];</code>
   * @return The ruleId.
   */
  java.lang.String getRuleId();
  /**
   * <pre>
   * `rule_id` is the unique identifier of the `Rule` that was not fulfilled.
   * This is the same `id` that was specified in the `Rule` message, allowing easy tracing of which rule was violated.
   * </pre>
   *
   * <code>optional string rule_id = 2 [json_name = "ruleId"];</code>
   * @return The bytes for ruleId.
   */
  com.google.protobuf.ByteString
      getRuleIdBytes();

  /**
   * <pre>
   * `message` is a human-readable error message that describes the nature of the violation.
   * This can be the default error message from the violated `Rule`, or it can be a custom message that gives more context about the violation.
   * </pre>
   *
   * <code>optional string message = 3 [json_name = "message"];</code>
   * @return Whether the message field is set.
   */
  boolean hasMessage();
  /**
   * <pre>
   * `message` is a human-readable error message that describes the nature of the violation.
   * This can be the default error message from the violated `Rule`, or it can be a custom message that gives more context about the violation.
   * </pre>
   *
   * <code>optional string message = 3 [json_name = "message"];</code>
   * @return The message.
   */
  java.lang.String getMessage();
  /**
   * <pre>
   * `message` is a human-readable error message that describes the nature of the violation.
   * This can be the default error message from the violated `Rule`, or it can be a custom message that gives more context about the violation.
   * </pre>
   *
   * <code>optional string message = 3 [json_name = "message"];</code>
   * @return The bytes for message.
   */
  com.google.protobuf.ByteString
      getMessageBytes();

  /**
   * <pre>
   * `for_key` indicates whether the violation was caused by a map key, rather than a value.
   * </pre>
   *
   * <code>optional bool for_key = 4 [json_name = "forKey"];</code>
   * @return Whether the forKey field is set.
   */
  boolean hasForKey();
  /**
   * <pre>
   * `for_key` indicates whether the violation was caused by a map key, rather than a value.
   * </pre>
   *
   * <code>optional bool for_key = 4 [json_name = "forKey"];</code>
   * @return The forKey.
   */
  boolean getForKey();
}
